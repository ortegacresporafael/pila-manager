version: "3.9"
services:


# Configuración de Gitlab
  gitlab:
    image: gitlab/gitlab-ce:latest
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
        nginx['redirect_http_to_https'] = false
    ports:
      - '80:80'
      - '443:443'
      - '2224:22'
    volumes:
      - /mnt/volumes/gitlab-config:/etc/gitlab
      - /mnt/volumes/gitlab-logs:/var/log/gitlab
      - /mnt/volumes/gitlab-data:/var/opt/gitlab
    networks:
      - net
    deploy:
     placement:
      constraints:
       - node.role == manager

# Configuración de Jenkins
  jenkins:
    image: jenkins/jenkins:lts
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - /mnt/volumes/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/bin/docker:/usr/bin/docker
    networks:
      - net
    deploy:
     placement:
      constraints:
       - node.role == manager

    



# Configuración de Docker Registry
  registry:
    image: registry:2.7.1
    ports:
    - 5000:5000
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    volumes:
      - /mnt/volumes/registry-auth:/auth
      - /mnt/volumes/registry-data:/var/lib/registry
    networks:
      - net
    deploy:
     placement:
      constraints:
       - node.role == worker


# Configuración de Swarmpit
  app:
    image: swarmpit/swarmpit:latest
    environment:
      - SWARMPIT_DB=http://db:5984
      - SWARMPIT_INFLUXDB=http://influxdb:8086
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 888:8080
    networks:
      - net
    depends_on:
      - db
      - influxdb
    deploy:
     placement:
      constraints:
       - node.role == manager



# Configuración de Couchdb
  db:
    image: couchdb:2.3.0
    volumes:
      - /mnt/volumes/db-data:/opt/couchdb/data
    networks:
      - net
    deploy:
     placement:
      constraints: [node.hostname == form-devops2]



# Configuración de Influx
  influxdb:
    image: influxdb:1.7
    volumes:
      - /mnt/volumes/influx-data:/var/lib/influxdb
    networks:
      - net
    deploy:
     placement:
      constraints: [node.hostname == form-devops2]



# Configuración del Swarmpit agent
  agent:
    image: swarmpit/agent:latest
    environment:
      - DOCKER_API_VERSION=1.35
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - net
    deploy:
      mode: global
    labels:
        swarmpit.agent: 'true'

# Configuración de Prometheus

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml      
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    networks:
      - net
    deploy:
      placement:
        constraints:
          - node.role == manager
          
# Configuración de Node-exporter
      
  node-exporter:
    image: prom/node-exporter
    ports:
      - 9100:9100
    networks:
      - net
    deploy: 
       mode: global

#Configuración de Cadvisor

  cadvisor:
    image: google/cadvisor:latest
    ports:
      - 8084:8084
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - net
    deploy: 
      mode: global

# Configuración de Grafana

  grafana:
    image: grafana/grafana
    user: "1000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    networks:
      - net
    deploy:
      placement:
        constraints:
          - node.role == manager



# Redes
networks:
  net:
    driver: overlay
    attachable: true
